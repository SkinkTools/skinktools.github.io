* {
 margin: 0;
 padding: 0;
}

:root {
    --theme-input-background: gray;
    --theme-input-text: white;
    --theme-input-active: yellow;
    --theme-padding: 1em;

    /* We'll use this repeatedly, so let's cache it here. */
    --theme-padding-half: calc(var(var(--theme-padding)) / 2);
}

body > * {
  margin-bottom: calc(var(--theme-padding-half));
}

body {
    width: calc(100vw - calc(var(--theme-padding) * 2));
    scrollbar-gutter: stable;
    padding: var(--theme-padding);
}


ul, ol {
    margin-left: calc(var(--theme-padding) * 1.5);
}
.comparison,
.comparison > section,
.comparison > figcaption:not(:has(> details))
 {
    width: inherit;
    min-width: inherit;
}

.comparison > figcaption:has(> details) {
    width: auto;
    max-width: fit-content;
}


.comparison > figcaption:not(:has(> details)),
.comparison > figcaption > details > summary {
    text-align: center;
}

.comparison > section.compared {
    display: flex;
    flex-direction: row;
    gap: var(--theme-padding);
}

@property --n-children {
    syntax: "<integer>";
    inherits: false;
    initial-value: 0;
}

/* Some layout helpers. */
:has(> *:nth-child(1)) { --n-children: 1; }
:has(> *:nth-child(2)) { --n-children: 2; }
:has(> *:nth-child(3)) { --n-children: 3; }
:has(> *:nth-child(4)) { --n-children: 4; }


section.compared > * {
    display: block;
    min-width: calc(
        calc(
            100% - calc(
                var(--theme-padding)
                * calc(max(1, calc(var(--n-children) - 1)))
            )
        )
        / var(--n-children)
    );
}

@media (max-width: 800px) {
    .comparison > section.compared {
        flex-direction: column;
    }
    section.compared > * {
        width: 100%;
    }
}

kbd {
    border: 0.15em solid black;
    background: lightgray;
    color: black;
    padding: 0.05em;
    border-radius: 0.25em;
    /* position: relative;
    top: -0.075em; */
}

pre {
    padding: calc(var(--theme-padding-half));
    display: block;
}
pre, code {
    white-space: pre-line;
    background: var(--theme-input-background);
    width: 100%;
}

pre > code {
    white-space: pre;
    white-space-collapse: preserve;
    color: var(--theme-input-text);
}
pre > code::selection {
    background: var(--theme-input-active);
    color: black;
}